name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize ]

jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm install

      - run: npm run eslint
      - run: npm run build

      - name: Discord Webhook Notify
        uses: rjstone/discord-webhook-notify@v1.0.4
        if: failure()
        with:
          severity: error
          details: Test Failed!
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}

      - name: Trigger deployment
        if: ${{ github.event_name == 'push' && !contains(join(github.event.commits.*.message, ''), '#skip')}}
        run: curl https://api.render.com/deploy/srv-${{ secrets.RENDER_SERVICE_ID }}?key=${{ secrets.RENDER_API_KEY }}

      - name: Discord Webhook Notify
        uses: rjstone/discord-webhook-notify@v1.0.4
        if: success()
        with:
          severity: info
          details: Test Succeeded!
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}

  tag_release:
    needs: [ simple_deployment_pipeline ]
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      - name: Bump version and push tag
        if: ${{ github.event_name == 'push' && !contains(join(github.event.commits.*.message, ''), '#skip')}}
        uses: anothrNick/github-tag-action@v1 # Don't use @master or @v1 unless you're happy to test the latest version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # if you don't want to set write permissions use a PAT token
          WITH_V: false
          DEFAULT_BUMP: patch
